{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tkinter import*\n",
    "import tkinter.messagebox\n",
    "from PIL import ImageTk,Image\n",
    "root=Tk()\n",
    "def e():\n",
    "    ph={'male':0,'female':0}\n",
    "    ph['male']=phmVar.get()\n",
    "    ph['female']=phfVar.get()\n",
    "    ladies={'single':[0,0,0,0],'group':[0,0,0,0]}\n",
    "    ladies['single'][2]=lVar.get()\n",
    "    family={'members':0}\n",
    "    family['members']=familyVar.get()\n",
    "    gents={'single':[0,0,0,0],'group':[0,0,0,0]}\n",
    "    gents['single'][0]=gVar.get()\n",
    "    seats=18\n",
    "    van=[[0],[0,0,0,0,0]]\n",
    "    van[1:1]=[[0,0,0] for x in range(4)]\n",
    "    if ph['female']!=0:\n",
    "        for i,x in enumerate(van):\n",
    "            for j,place in enumerate(x):\n",
    "                if van[i][j]==0 and ph['female']!=0:\n",
    "                    van[i][j]='phf'\n",
    "                    ph['female']-=1\n",
    "                    seats-=1\n",
    "    if ph['male']!=0 and seats!=0:\n",
    "        for i,x in enumerate(van):\n",
    "            for j,place in enumerate(x):\n",
    "                if van[i][j]==0 and ph['male']!=0:\n",
    "                    van[i][j]='phm'\n",
    "                    ph['male']-=1\n",
    "                    seats-=1\n",
    "    k=0\n",
    "    while k<4:\n",
    "        if ladies['group'][k]!=0:\n",
    "                for i,x in enumerate(van):\n",
    "                    for j,place in enumerate(x):\n",
    "                        if van[i][j]==0 and ladies['group'][k]!=0:\n",
    "                            van[i][j]='Ls'\n",
    "                            ladies['group'][k]-=1\n",
    "                            seats-=1\n",
    "        if ladies['single'][k]!=0:\n",
    "            if van[0][0]==0 :\n",
    "                van[i][j]='Ls'\n",
    "                ladies['single'][k]-=1\n",
    "                seats-=1\n",
    "            for i in range(1,5):\n",
    "                if van[i][2]==0 and ladies['single'][k]!=0:\n",
    "                    van[i][2]='Ls'\n",
    "                    ladies['single'][k]-=1\n",
    "                    seats-=1\n",
    "            if van[0][0]!=0 and van[1][2]!=0 and van[2][2]!=0 and van[3][2]!=0 and ladies['single'][k]!=0:\n",
    "                for i,x in enumerate(van):\n",
    "                    for j,place in enumerate(x):\n",
    "                        if van[i][j]==0 and ladies['single'][k]!=0 and(j!=2 or i,j==5,2):\n",
    "                            van[i][j]='Ls'\n",
    "                            ladies['single'][k]-=1\n",
    "                            seats-=1\n",
    "        k+=1\n",
    "    if family['members']!=0 and seats!=0:\n",
    "        for i,x in enumerate(van):\n",
    "            for j,place in enumerate(x):\n",
    "                if van[i][j]==0 and family['members']!=0:\n",
    "                    van[i][j]='f'\n",
    "                    family['members']-=1\n",
    "                    seats-=1\n",
    "    k=0\n",
    "    while k<4:\n",
    "        if gents['group'][k]!=0:\n",
    "                for i,x in enumerate(van):\n",
    "                    for j,place in enumerate(x):\n",
    "                        if van[i][j]==0 and gents['group'][k]!=0:\n",
    "                            van[i][j]='Gs'\n",
    "                            gents['group'][k]-=1\n",
    "                            seats-=1\n",
    "        if gents['single'][k]!=0:\n",
    "            if van[0][0]==0 :\n",
    "                van[i][j]='Gs'\n",
    "                gents['single'][k]-=1\n",
    "                seats-=1\n",
    "            for i in range(1,5):\n",
    "                if van[i][2]==0 and gents['single'][k]!=0:\n",
    "                    van[i][2]='Gs'\n",
    "                    gents['single'][k]-=1\n",
    "                    seats-=1\n",
    "            if van[0][0]!=0 and van[1][2]!=0 and van[2][2]!=0 and van[3][2]!=0 and gents['single'][k]!=0:\n",
    "                for i,x in enumerate(van):\n",
    "                    for j,place in enumerate(x):\n",
    "                        if van[i][j]==0 and gents['single'][k]!=0 and(j!=2 or i,j==5,2):\n",
    "                            van[i][j]='Gs'\n",
    "                            gents['single'][k]-=1\n",
    "                            seats-=1\n",
    "        k+=1\n",
    "    li2=[]\n",
    "    for i in van:\n",
    "            li2.insert(0,i)\n",
    "    li3=[x for i in li2 for x in i]\n",
    "    i=0\n",
    "    j=0\n",
    "    k=0\n",
    "    for i in range(18):\n",
    "        q=li3[i]\n",
    "        if(q==0):\n",
    "            im=img2\n",
    "        if(q=='Gs'):\n",
    "            im=g\n",
    "        if(q=='Ls'):\n",
    "            im=l\n",
    "        if(q=='f'):\n",
    "            im=f\n",
    "        if(q=='phf'):\n",
    "            im=phf\n",
    "        if(q=='phm'):\n",
    "            im=phm\n",
    "        if(i<5):\n",
    "            canvas.create_image(650+42*(i),200,image=im,anchor=NW)\n",
    "        if(i<17 and i>4):\n",
    "            if(k%3==0):\n",
    "                j=j+1\n",
    "                k=0\n",
    "            if(k==2):\n",
    "                canvas.create_image(700+50*(k),200+50*(j),image=im,anchor=NW)\n",
    "            else:\n",
    "                canvas.create_image(650+50*(k),200+50*(j),image=im,anchor=NW)\n",
    "            k=k+1\n",
    "        if(i<18 and i>16):\n",
    "            canvas.create_image(650+50*(k),200+50*(j+1),image=im,anchor=NW)\n",
    "canvas=Canvas(root,width=1680,height=1050,bg=\"white\");\n",
    "canvas.pack(fill=BOTH,expand=True)\n",
    "head_label=Label(canvas,text=\"INTELLIGENT SEAT ALLOCATION SYSTEM\",fg=\"black\",font=(\"Verdana\",30),bg=\"white\")\n",
    "head_label.place(relx=.25,rely=.1)\n",
    "familyVar=IntVar();\n",
    "phmVar=IntVar();\n",
    "phfVar=IntVar();\n",
    "lVar=IntVar();\n",
    "gVar=IntVar();\n",
    "vacent_label=Label(canvas,text=\"empty:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "vacent_label.place(relx=.7,rely=.3)\n",
    "family_label=Label(canvas,text=\"family:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "family_label.place(relx=.7,rely=.35)\n",
    "family2_label=Label(canvas,text=\"family:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "family2_label.place(relx=.02,rely=.65)\n",
    "family_entry=Entry(canvas,textvariable=familyVar,font=(\"Verdana\",20))\n",
    "family_entry.place(relx=.09,rely=.66,width=100,height=30)\n",
    "phm_label=Label(canvas,text=\"Phsically handicapped(M):\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "phm_label.place(relx=.7,rely=.4)\n",
    "phm2_label=Label(canvas,text=\"Phsically handicapped(M):\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "phm2_label.place(relx=.18,rely=.65)\n",
    "phm_entry=Entry(canvas,textvariable=phmVar,font=(\"Verdana\",20))\n",
    "phm_entry.place(relx=.42,rely=.66,width=100,height=30)\n",
    "phf_label=Label(canvas,text=\"Phsically handicapped(F):\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "phf_label.place(relx=.7,rely=.45)\n",
    "phf2_label=Label(canvas,text=\"Phsically handicapped(F):\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "phf2_label.place(relx=.18,rely=.72)\n",
    "phf_entry=Entry(canvas,textvariable=phfVar,font=(\"Verdana\",20))\n",
    "phf_entry.place(relx=.42,rely=.73,width=100,height=30)\n",
    "l_label=Label(canvas,text=\"Ladies:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "l_label.place(relx=.7,rely=.5)\n",
    "l2_label=Label(canvas,text=\"Ladies:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "l2_label.place(relx=0.02,rely=.72)\n",
    "l_entry=Entry(canvas,textvariable=lVar,font=(\"Verdana\",20))\n",
    "l_entry.place(relx=.09,rely=.73,width=100,height=30)\n",
    "g_label=Label(canvas,text=\"Gents:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "g_label.place(relx=.7,rely=.55)\n",
    "g_label=Label(canvas,text=\"Gents:\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "g_label.place(relx=0.02,rely=.78)\n",
    "g_entry=Entry(canvas,textvariable=gVar,font=(\"Verdana\",20))\n",
    "g_entry.place(relx=.09,rely=.79,width=100,height=30)\n",
    "li=[[0],\n",
    " [0, 0, 0],\n",
    " [0, 0, 0],\n",
    " [0, 0, 0],\n",
    " [0, 0, 0],\n",
    " [0, 0, 0, 0,0]]\n",
    "li2=[]\n",
    "for i in li:\n",
    "        li2.insert(0,i)\n",
    "li3=[x for i in li2 for x in i]\n",
    "generate=Button(canvas,text=\"Allocate\",font=(\"Verdana\",25),fg=\"#f93f10\",bg=\"Powderblue\",command=e)\n",
    "generate.place(relx=.65,rely=.72,height=50,width=250)\n",
    "img2=Image.open(\"em.png\")\n",
    "img2=ImageTk.PhotoImage(img2)\n",
    "phf=Image.open(\"phf.png\")\n",
    "phf=ImageTk.PhotoImage(phf)\n",
    "phm=Image.open(\"phm.png\")\n",
    "phm=ImageTk.PhotoImage(phm)\n",
    "f=Image.open(\"f.png\")\n",
    "f=ImageTk.PhotoImage(f)\n",
    "l=Image.open(\"l.png\")\n",
    "l=ImageTk.PhotoImage(l)\n",
    "g=Image.open(\"g.png\")\n",
    "g=ImageTk.PhotoImage(g)\n",
    "details_label=Label(canvas,text=\"Enter the details\",fg=\"black\",font=(\"Verdana\",20),bg=\"white\")\n",
    "details_label.place(relx=.02,rely=.6)\n",
    "canvas.create_image(1200,250,image=img2,anchor=NW)\n",
    "canvas.create_image(1200,295,image=f,anchor=NW)\n",
    "canvas.create_image(1450,335,image=phm,anchor=NW)\n",
    "canvas.create_image(1450,378,image=phf,anchor=NW)\n",
    "canvas.create_image(1200,428,image=l,anchor=NW)\n",
    "canvas.create_image(1200,470,image=g,anchor=NW)\n",
    "j=0\n",
    "k=0\n",
    "root.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
